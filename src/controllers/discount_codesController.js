const { Discount_codes } = require('../models');

// L·∫•y danh s√°ch m√£ gi·∫£m gi√°
const danhSachDiscount_codes = async (req, res) => {
  try {
    const danhsach = await Discount_codes.findAll();
    return res.status(200).json({
      success: true,
      message: "L·∫•y danh s√°ch m√£ gi·∫£m gi√° th√†nh c√¥ng",
      data: danhsach,
    });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success: false, message: error.message });
  }
};

// Th√™m m√£ gi·∫£m gi√°
const themDiscount_code = async (req, res) => {
  try {
    const {
      code,
      discount_type,
      discount_value,
      min_order_value,
      usage_limit,
      used_count,
      start_date,
      end_date,
      is_active
    } = req.body;
    const existingDiscout = await Discount_codes.findOne({ where: { code } });
    if (existingDiscout) {
      return res.status(400).json({ message: 'T√™n ma giam gia ƒë√£ t·ªìn t·∫°i' });
    }
    const newCode = await Discount_codes.create({
      code,
      discount_type,
      discount_value,
      min_order_value,
      usage_limit,
      used_count,
      start_date,
      end_date,
      is_active
    });

    return res.status(201).json({
      success: true,
      message: "Th√™m m√£ gi·∫£m gi√° th√†nh c√¥ng",
      data: newCode,
    });
  } catch (error) {
    console.error(error); // üëà ƒë·ªÉ debug th√™m
    res.status(500).json({ success: false, message: error.message });
  }
};
const getDiscountById = async (req, res) => {
    try {
      const { id } = req.params;
      const code = await Discount_codes.findByPk(id);
  
      if (!code) {
        return res.status(404).json({
          success: false,
          message: "Kh√¥ng t√¨m th·∫•y code gi·∫£m gi√°"
        });
      }
  
      return res.status(200).json({
        success: true,
        message: "L·∫•y chi ti·∫øt code th√†nh c√¥ng",
        data: code
      });
    } catch (error) {
      res.status(500).json({
        success: false,
        message: error.message
      });
    }
  };
// S·ª≠a m√£ gi·∫£m gi√°
const suaDiscount_code = async (req, res) => {
  try {
    const { id } = req.params;
    const code = await Discount_codes.findByPk(id);
    if (!code) {
      return res.status(404).json({
        success: false,
        message: "Kh√¥ng t√¨m th·∫•y m√£ gi·∫£m gi√°",
      });
    }

    // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng g·ª≠i `code` m·ªõi v√† n√≥ b·ªã tr√πng v·ªõi b·∫£n ghi kh√°c
    if (req.body.code && req.body.code !== code.code) {
      const existing = await Discount_codes.findOne({
        where: { code: req.body.code }
      });
      if (existing) {
        return res.status(409).json({
          success: false,
          message: "M√£ gi·∫£m gi√° ƒë√£ t·ªìn t·∫°i. Vui l√≤ng ch·ªçn m√£ kh√°c.",
        });
      }
    }

    await code.update(req.body);

    return res.status(200).json({
      success: true,
      message: "C·∫≠p nh·∫≠t m√£ gi·∫£m gi√° th√†nh c√¥ng",
      data: code,
    });
  } catch (error) {
    res.status(500).json({ success: false, message: error.message });
  }
};

// Xo√° m√£ gi·∫£m gi√°
const xoaDiscount_code = async (req, res) => {
  try {
    const { id } = req.params;
    const code = await Discount_codes.findByPk(id);
    if (!code) {
      return res.status(404).json({
        success: false,
        message: "Kh√¥ng t√¨m th·∫•y m√£ gi·∫£m gi√°",
      });
    }

    await code.destroy();

    return res.status(200).json({
      success: true,
      message: "Xo√° m√£ gi·∫£m gi√° th√†nh c√¥ng",
    });
  } catch (error) {
res.status(500).json({ success: false, message: error.message });
  }
};
//trang thai discount
const trangThaiDiscout = async (req, res, next) => {
  try {
    const { id } = req.params;
    const { is_active } = req.body;

    const [affectedRows] = await Discount_codes.update(
      { is_active },
      { where: { id } }
    );

    if (affectedRows === 0) {
      return res.status(404).json({
        status: 'false',
        message: 'ma giam gia kh√¥ng t·ªìn t·∫°i',
      });
    }

    const updatedDiscout = await Discount_codes.findByPk(id);

    return res.status(200).json({
      status: true,
      message: 'C·∫≠p nh·∫≠t tr·∫°ng th√°i ma giam gia th√†nh c√¥ng',
      data: updatedDiscout,
    });
  } catch (error) {
    next(error);
  }
};
module.exports = {
  danhSachDiscount_codes,
  themDiscount_code,
  suaDiscount_code,
  getDiscountById,
  xoaDiscount_code,
  trangThaiDiscout
};
